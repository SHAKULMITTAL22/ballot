// Test generated by RoostGPT for test ballot-go-test using AI Type Open Source AI and AI Model meta-llama/Llama-2-13b-chat

package vote_test

import (
	"testing"

	"github.com/stretchr/testify/require"
)

type Vote struct {
	CandidateID int `json:"candidate_id"`
	Option      string `json:"option"`
}

func TestSaveVote(t *testing.T) {
	tests := []struct {
		name     string
		vote     Vote
		wantErr  bool
		wantStore map[int]int
	}{
		{
			name: "success",
			vote: Vote{
				CandidateID: 1,
				Option: "option1",
			},
			wantErr: false,
			wantStore: map[int]int{
				1: 2,
			},
		},
		{
			name: "edge case",
			vote: Vote{
				CandidateID: 0,
				Option: "",
			},
			wantErr: true,
			wantStore: map[int]int{},
		},
		{
			name: "double vote",
			vote: Vote{
				CandidateID: 1,
				Option: "option1",
			},
			wantErr: true,
			wantStore: map[int]int{
				1: 1,
			},
		},
	}

	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			store := make(map[int]int)
			err := saveVote(test.vote)
			if test.wantErr {
				require.NotNil(t, err)
				return
			}
			require.NoError(t, err)
			require.EqualValues(t, test.wantStore, store)
		})
	}
}
