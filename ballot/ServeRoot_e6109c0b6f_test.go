// Test generated by RoostGPT for test roost-test using AI Type Open Source AI and AI Model meta-llama/Llama-2-13b-chat

package test

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestServeRoot(t *testing.T) {
	// Test case 1: Successful GET request
	req, err := http.NewRequest(http.MethodGet, "/", bytes.NewBufferString(""))
	assert.NoError(t, err)
	rr := &http.Recorder{}
	serveRoot(rr, req)
	assert.Equal(t, http.StatusOK, rr.Result.StatusCode)
	respBytes, _ := ioutil.ReadAll(rr.Body)
	var resp map[string]interface{}
	err = json.Unmarshal(respBytes, &resp)
	assert.NoError(t, err)
	assert.Equal(t, "result request received", string(resp["message"].([]byte)))

	// Test case 2: Invalid POST request
	req, err := http.NewRequest(http.MethodPost, "/", bytes.NewBufferString("{\"candidate_id\": \" invalid \"}"))
	assert.NoError(t, err)
	rr := &http.Recorder{}
	serveRoot(rr, req)
	assert.Equal(t, http.StatusBadRequest, rr.Result.StatusCode)
	respBytes, _ := ioutil.ReadAll(rr.Body)
	var resp map[string]interface{}
	err = json.Unmarshal(respBytes, &resp)
	assert.NoError(t, err)
	assert.Equal(t, "error parsing vote data. error: invalid character '\"' looking for beginning of object key string", string(resp["message"].([]byte)))
}
